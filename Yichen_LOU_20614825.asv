% Yichen LOU
% ssyyl67@nottingham.edu.cn

%% PRELIMINARY TASK - ARDUINO AND GIT INSTALLATION [10 MARKS]

% Initialize Arduino
a = arduino('COM6', 'Uno'); % Replace 'COM6' with your port

% Blink LED on pin D3
for i = 1:10
    writeDigitalPin(a, 'D6', 1); % Turn LED on
    pause(0.5);                  % Wait 0.5 seconds
    writeDigitalPin(a, 'D6', 0); % Turn LED off
    pause(0.5);                  % Wait 0.5 seconds
end

%% TASK 1 - READ TEMPERATURE DATA, PLOT, AND WRITE TO A LOG FILE [20 MARKS]

% Initialize Arduino
clear,clc
a = arduino('COM6', 'Uno');

% Data collection
V0C = 500;
TC=10;
duration = 600;
time = 0:1:(duration-1);
temperature = zeros(size(time));
for i = 1:length(time)
    tic
    voltage = readVoltage(a, 'A1'); % Connect to Interface A1
    temperature(i) = (voltage*1000 - V0C) / TC; % Determine V0°C and TC based on the sensor documentation
    elapsedTime=toc;
    if elapsedTime < 1
        pause(1-elapsedTime);
    end
end
% Calculate the statistics
minTemp = min(temperature);
maxTemp = max(temperature);
avgTemp = mean(temperature);
% Draw the figure
figure;
plot(time, temperature);
xlabel('Time (s)');
ylabel('Temperature (°C)');
xlim([0, 600]);
ylim([10 30]);
% output
dataLogStart = datestr(now, 'dd/mm/yyyy');
location = 'Nottingham';
fprintf('Data logging initiated - %s\n', dataLogStart);
fprintf('Location - %s\n\n', location);
for i = 0:10
    fprintf('Minute%d\n', i);
    fprintf('Temperature %.2f C\n\n', temperature(i + 1));
end
fprintf('Max temp%.2f C\n', maxTemp);
fprintf('Min temp%.2f C\n', minTemp);
fprintf('Average temp%.2f C\n', avgTemp);
fprintf('Data logging terminated\n');
% file writing
fileID = fopen('cabin_temperature.txt', 'w');
fprintf(fileID, 'Data logging initiated - %s\n', dataLogStart);
fprintf(fileID, 'Location - %s\n\n', location);
for i = 0:10
    fprintf(fileID, 'Minute%d\n', i);
    fprintf(fileID, 'Temperature %.2f C\n\n', temperature(i + 1));
end
fprintf(fileID, 'Max temp%.2f C\n', maxTemp);
fprintf(fileID, 'Min temp%.2f C\n', minTemp);
fprintf(fileID, 'Average temp%.2f C\n', avgTemp);
fprintf(fileID, 'Data logging terminated\n');
fclose(fileID);
%% TASK 2 - LED TEMPERATURE MONITORING DEVICE IMPLEMENTATION [25 MARKS]

% Initialize Arduino
clear,clc
a = arduino('COM6', 'Uno');

temp_monitor(a)

doc temp_monitor

%% TASK 3 - ALGORITHMS – TEMPERATURE PREDICTION [25 MARKS]

% Initialize Arduino
clear,clc
a = arduino('COM6', 'Uno');

temp_prediction(a)

doc temp_prediction


%% TASK 4 - REFLECTIVE STATEMENT [5 MARKS]

%{
  Challenges  
  1. Hardware Integration: Initial difficulties in connecting multiple sensors to Arduino, such as pin conflicts and unstable grounding, required repeated circuit debugging.
  2. Timing Management: Balancing LED blinking, temperature sampling, and live plotting in real-time led to timing conflicts. Solved by optimizing loop intervals using `pause()`.
  3. Sensor Noise: Temperature readings showed random spikes. 
  4. Prediction Accuracy: The linear prediction model assumes a constant rate of change, which may not hold true in real-world dynamic environments.

  Strengths  
  1. Modular Design: Separated temperature reading, LED control, and prediction logic into reusable functions for clarity.
  2. Real-Time Feedback: Console outputs and LED visualizations provided immediate system status checks.

  Limitations  
  1. Hardware Constraints: Limited sensor accuracy (±1°C) and LED response delays affected performance.
  2. Simplified Algorithms: Noise filtering used basic averaging, which struggles with rapid temperature changes.
  3. User Interface: Reliance on command-line outputs made the system less intuitive for non-technical users.

  Future Improvements  
  1. Better Noise Filtering: Implement a weighted moving average to prioritize recent data while smoothing noise.
  2. Basic GUI: Use MATLAB App Designer to create buttons/sliders for manual threshold adjustments.
  3. Multi-Sensor Validation: Add a second thermistor to cross-check temperature readings.
  4. Energy Efficiency: Replace polling with interrupt-driven LED control to reduce Arduino power consumption.
%}